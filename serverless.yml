service: sls-api

custom:
  settings:
    CUSTOMERS_TABLE: customers

provider:
  name: aws
  runtime: nodejs12.x
  environment: ${self:custom.settings}
  region: eu-central-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - dynamodb:DescribeTable
       - dynamodb:Scan
       - dynamodb:GetItem
       - dynamodb:PutItem
       - dynamodb:UpdateItem
       - dynamodb:DeleteItem
      Resource:
       - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.CUSTOMERS_TABLE}"

functions:
  createCustomer:
    handler: handler.createCustomer
    events:
    - http:
        path: /customer
        method: post
        cors: true
  getAllCustomers:
    handler: handler.getAllCustomers
    events:
    - http:
        path: /customers
        method: get
        cors: true
  getCustomer:
    handler: handler.getCustomer
    events:
    - http:
        path: /customer/{id}
        method: get
        cors: true
  updateCustomer:
    handler: handler.updateCustomer
    events:
    - http:
        path: /customer/{id}
        method: put
        cors: true
  deleteCustomer:
    handler: handler.deleteCustomer
    events:
    - http:
        path: /customer/{id}
        method: delete
        cors: true
  checkLogin:
    handler: handler.checkLogin
    events:
    - http:
        path: /login
        method: post
        cors: true

resources:
  Resources:
    CustomersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1 
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.CUSTOMERS_TABLE}
