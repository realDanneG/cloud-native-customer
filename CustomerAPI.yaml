openapi: 3.0.1
info:
  title: Customer API
  description: Cloud native apps Customer API
  termsOfService: http://swagger.io/terms/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://7hxuxvgjn2.execute-api.eu-central-1.amazonaws.com/dev
- url: http://7hxuxvgjn2.execute-api.eu-central-1.amazonaws.com/dev
tags:
- name: customer
  description: Customer operations
paths:
  /customer:
    post:
      tags:
      - customer
      summary: Create customer
      description: This can only be done by people who have API-key.
      operationId: createCustomer
      requestBody:
        description: Created user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
  /customers:
    get:
      tags:
      - customer
      summary: Gets all customers
      operationId: getAllCustomers
      responses:
        200:
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        400:
          description: Error
          content: {}
  /customer/{id}:
    get:
      tags:
      - customer
      summary: Get user by id
      operationId: getCustomer
      parameters:
      - name: id
        in: path
        description: 'The user id that needs to be fetched. '
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Customer'
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        400:
          description: Invalid id supplied
          content: {}
        404:
          description: User not found
          content: {}
    put:
      tags:
      - customer
      summary: Updated customer
      description: API-key needed.
      operationId: updateCustomer
      parameters:
      - name: id
        in: path
        description: name that need to be updated
        required: true
        schema:
          type: string
      requestBody:
        description: Updated user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        400:
          description: Invalid user supplied
          content: {}
        404:
          description: User not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - customer
      summary: Delete customer
      description: API-key needed.
      operationId: deleteCustomer
      parameters:
      - name: id
        in: path
        description: The id of the user that needs to be deleted
        required: true
        schema:
          type: string
      responses:
        400:
          description: Invalid id
          content: {}
        404:
          description: User not found
          content: {}
  /login:
    post:
      tags:
      - customer
      summary: Customer login
      operationId: checkLogin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
        required: true
      responses:
        default:
          description: successful operation
          content: {}
        404:
          description: Email/password combination not found
          content: {}
      x-codegen-request-body-name: body
      
      
     

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
        gender:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        zipcode:
          type: string
        country:
          type: string
        admin:
          type: boolean
        returningcustomer:
          type: boolean
      xml:
        name: User
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  securitySchemes:
    api_key:
      type: apiKey
      name: x-api-key
      in: header